#superc_args -printAST
TranslationUnit(
  ExternalDeclarationList(
    Conditional(
      1,
      FunctionDefinition(
        FunctionPrototype(
          xtc.lang.cpp.Syntax$Language(
            "int"
          ),
          FunctionDeclarator(
            SimpleDeclarator(
              xtc.lang.cpp.Syntax$Text(
                "main"
              )
            )
          )
        ),
        CompoundStatement(
          DeclarationOrStatementList(
            Conditional(
              1,
              IterationStatement(
                xtc.lang.cpp.Syntax$Language(
                  "while"
                ),
                EqualityExpression(
                  Conditional(
                    _C1,
                    PrimaryIdentifier(
                      xtc.lang.cpp.Syntax$Text(
                        "n"
                      )
                    ),
                    !_C1,
                    AdditiveExpression(
                      PrimaryIdentifier(
                        xtc.lang.cpp.Syntax$Text(
                          "n"
                        )
                      ),
                      xtc.lang.cpp.Syntax$Language(
                        "-"
                      ),
                      xtc.lang.cpp.Syntax$Text(
                        "2"
                      )
                    )
                  ),
                  Conditional(
                    _C1,
                    xtc.lang.cpp.Syntax$Language(
                      "!="
                    ),
                    !_C1,
                    xtc.lang.cpp.Syntax$Language(
                      "!="
                    )
                  ),
                  Conditional(
                    _C1,
                    xtc.lang.cpp.Syntax$Text(
                      "0"
                    ),
                    !_C1,
                    xtc.lang.cpp.Syntax$Text(
                      "0"
                    )
                  )
                ),
                CompoundStatement(
                  DeclarationOrStatementList(
                    Conditional(
                      1,
                      Conditional(
                        _C2,
                        ExpressionStatement(
                          AssignmentExpression(
                            PrimaryIdentifier(
                              xtc.lang.cpp.Syntax$Text(
                                "n"
                              )
                            ),
                            AdditiveExpression(
                              PrimaryIdentifier(
                                xtc.lang.cpp.Syntax$Text(
                                  "n"
                                )
                              ),
                              xtc.lang.cpp.Syntax$Language(
                                "-"
                              ),
                              xtc.lang.cpp.Syntax$Text(
                                "3"
                              )
                            )
                          )
                        ),
                        !_C2,
                        ExpressionStatement(
                          AssignmentExpression(
                            PrimaryIdentifier(
                              xtc.lang.cpp.Syntax$Text(
                                "n"
                              )
                            ),
                            MultiplicativeExpression(
                              PrimaryIdentifier(
                                xtc.lang.cpp.Syntax$Text(
                                  "n"
                                )
                              ),
                              xtc.lang.cpp.Syntax$Language(
                                "/"
                              ),
                              xtc.lang.cpp.Syntax$Text(
                                "2"
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
