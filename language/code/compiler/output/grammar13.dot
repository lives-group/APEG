Digraph choiceback {
  node [shape="box"];
  grammar [label = "Grammar[choiceback]"];

  aRule [label = "Rule[a]"];
  grammar -> aRule;
  attributeExpr0 [label = "k"];
  SynAtt1 -> attributeExpr0;
  SynAtt1 [label = "↑"];
  aRule -> SynAtt1;
  NonterminalPeg0 [label = "NonterminalPegExpr:b"];
  aRule -> NonterminalPeg0;
  IntLiteralExpr1 [label = "0"];
  NonterminalPeg0 -> IntLiteralExpr1;
  attributeExpr2 [label = "k"];
  NonterminalPeg0 -> attributeExpr2;
  bRule [label = "Rule[b]"];
  grammar -> bRule;
  inh2 [label = "↓x"];
  bRule -> inh2;
  attributeExpr3 [label = "x1"];
  SynAtt3 -> attributeExpr3;
  SynAtt3 [label = "↑"];
  bRule -> SynAtt3;
  SequencePeg1 [label = "SequencePegExpr(.)"];
  bRule -> SequencePeg1;
  LiteralPeg2 [label = "'0'"];
  SequencePeg1 -> LiteralPeg2;
  UpdatePeg3 [label = "UpdatePegExpr([<-])"];
  SequencePeg1 -> UpdatePeg3;
  attributeExpr4 [label = "x"];
  UpdatePeg3 -> attributeExpr4;
  DivExpr5 [label = "/"];
  UpdatePeg3 -> DivExpr5;
  MultExpr6 [label = "*"];
  DivExpr5 -> MultExpr6;
  MultExpr7 [label = "*"];
  MultExpr6 -> MultExpr7;
  attributeExpr8 [label = "x1"];
  MultExpr7 -> attributeExpr8;
  FloatLiteralExpr9 [label = "3.0"];
  MultExpr7 -> FloatLiteralExpr9;
  attributeExpr10 [label = "x"];
  MultExpr6 -> attributeExpr10;
  FloatLiteralExpr11 [label = "2.0"];
  DivExpr5 -> FloatLiteralExpr11;
  assignmentNode4 [label = "Assignment:x"];
  UpdatePeg3 -> assignmentNode4;
}