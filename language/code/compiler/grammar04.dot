Digraph notDiscardChanges {
  node [shape="box"];
  grammar [label = "Grammar[notDiscardChanges]];

  aRule [label = "Rule[a]"];
  grammar -> aRule;
  aRule_k [label = "↑k:float "];
  aRule -> aRule_k;
  p_expr_nonterminal0 [label = "NonterminalPegExpr:b"];
  aRule -> p_expr_nonterminal0;
  expr_int0 [label = "0:int"];
  p_expr_nonterminal0 -> expr_int0;
  expr_var1 [label = "k:var"];
  p_expr_nonterminal0 -> expr_var1;
  bRule [label = "Rule[b]"];
  grammar -> bRule;
  bRule_x [label = "↓x:int "];
  bRule -> bRule_x;
  bRule_x1 [label = "↑x1:int "];
  bRule -> bRule_x1;
  p_expr_choice1 [label = "ChoicePegExpr(/)"];
  bRule -> p_expr_choice1;
  p_expr_sequence2 [label = "SequencePegExpr(.)"];
  p_expr_choice1 -> p_expr_sequence2;
  p_expr_update3 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence2 -> p_expr_update3;
  assignment0 [label = "Assignment:x"];
  p_expr_update3 -> assignment0;
  expr_binary2 [label = "+"];
  assignment0 -> expr_binary2;
  expr_var3 [label = "x:var"];
  expr_binary2 -> expr_var3;
  expr_int4 [label = "1:int"];
  expr_binary2 -> expr_int4;
  p_expr_literal4 [label = "'0'"];
  p_expr_sequence2 -> p_expr_literal4;
  p_expr_update5 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence2 -> p_expr_update5;
  assignment1 [label = "Assignment:x1"];
  p_expr_update5 -> assignment1;
  expr_var5 [label = "x:var"];
  assignment1 -> expr_var5;
  p_expr_choice6 [label = "ChoicePegExpr(/)"];
  p_expr_choice1 -> p_expr_choice6;
  p_expr_sequence7 [label = "SequencePegExpr(.)"];
  p_expr_choice6 -> p_expr_sequence7;
  p_expr_update8 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence7 -> p_expr_update8;
  assignment2 [label = "Assignment:x"];
  p_expr_update8 -> assignment2;
  expr_binary6 [label = "+"];
  assignment2 -> expr_binary6;
  expr_var7 [label = "x:var"];
  expr_binary6 -> expr_var7;
  expr_int8 [label = "1:int"];
  expr_binary6 -> expr_int8;
  p_expr_literal9 [label = "'1'"];
  p_expr_sequence7 -> p_expr_literal9;
  p_expr_update10 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence7 -> p_expr_update10;
  assignment3 [label = "Assignment:x1"];
  p_expr_update10 -> assignment3;
  expr_var9 [label = "x:var"];
  assignment3 -> expr_var9;
  p_expr_sequence11 [label = "SequencePegExpr(.)"];
  p_expr_choice6 -> p_expr_sequence11;
  p_expr_update12 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence11 -> p_expr_update12;
  assignment4 [label = "Assignment:x"];
  p_expr_update12 -> assignment4;
  expr_binary10 [label = "+"];
  assignment4 -> expr_binary10;
  expr_var11 [label = "x:var"];
  expr_binary10 -> expr_var11;
  expr_int12 [label = "1:int"];
  expr_binary10 -> expr_int12;
  p_expr_literal13 [label = "'2'"];
  p_expr_sequence11 -> p_expr_literal13;
  p_expr_update14 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence11 -> p_expr_update14;
  assignment5 [label = "Assignment:x1"];
  p_expr_update14 -> assignment5;
  expr_var13 [label = "x:var"];
  assignment5 -> expr_var13;
  cRule [label = "Rule[c]"];
  grammar -> cRule;
  cRule_x [label = "↑x:int "];
  cRule -> cRule_x;
  p_expr_sequence15 [label = "SequencePegExpr(.)"];
  cRule -> p_expr_sequence15;
  p_expr_update16 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence15 -> p_expr_update16;
  assignment6 [label = "Assignment:x"];
  p_expr_update16 -> assignment6;
  expr_int14 [label = "0:int"];
  assignment6 -> expr_int14;
  p_expr_star17 [label = "StarPegExpr(*)"];
  p_expr_sequence15 -> p_expr_star17;
  p_expr_sequence18 [label = "SequencePegExpr(.)"];
  p_expr_star17 -> p_expr_sequence18;
  p_expr_update19 [label = "UpdatePegExpr([<-])"];
  p_expr_sequence18 -> p_expr_update19;
  assignment7 [label = "Assignment:x"];
  p_expr_update19 -> assignment7;
  expr_binary15 [label = "+"];
  assignment7 -> expr_binary15;
  expr_var16 [label = "x:var"];
  expr_binary15 -> expr_var16;
  expr_int17 [label = "1:int"];
  expr_binary15 -> expr_int17;
  p_expr_literal20 [label = "'2'"];
  p_expr_sequence18 -> p_expr_literal20;
}