// ===========================================================================
// Generated by Rats!, version 1.13.1, (C) 2004-2007 Robert Grimm.
// ===========================================================================

module ParseTree;

option withParseTree;

public transient Node Top = 
  v$g$1:One v$g$2:Two v$g$3:One void:v$pt$2:Two void:v$pt$1:Three 
  v$g$4:Formatting([], v$pt$2, [v$pt$1]) 
  /* value = GNode(Top, [v$g$1, v$g$2, v$g$3, v$g$4]); */
  ;

Node One = 
  void:v$pt$1:One$$Split1 void:v$pt$2:")":Symbol 
  yyValue:Formatting([], v$pt$1, [v$pt$2])
  / void:v$pt$3:"(":Symbol void:v$pt$4:")":Symbol 
  /* value = Formatting([], GNode(One, []), [v$pt$3, v$pt$4]); */
  ;

transient Node One$$Split1 = 
  void:v$pt$3:"(":Symbol void:v$pt$4:PID 
  v$g$1:Formatting([v$pt$3], v$pt$4, []) 
  v$g$2:(void:v$pt$1:",":Symbol void:v$pt$2:PID v$el$1:Formatting([v$pt$1], v$pt$2, []))* 
  @One /* value = GNode(One, [v$g$1, v$g$2]); */
  ;

Node Two = 
  void:v$pt$1:"(":Symbol void:v$pt$2:Two$$Split1 void:v$pt$3:")":Symbol 
  yyValue:Formatting([v$pt$1], v$pt$2, [v$pt$3])
  / void:v$pt$4:"(":Symbol void:v$pt$5:Two$$Split2 void:v$pt$6:")":Symbol 
  yyValue:Formatting([v$pt$4], v$pt$5, [v$pt$6])
  ;

transient Node Two$$Split1 = 
  v$g$1:(v$el$1:PID)+ v$g$2:One v$g$3:(v$el$2:Constant)+ @Two 
  /* value = GNode(Two, [v$g$1, v$g$2, v$g$3]); */
  ;

transient Node Two$$Split2 = 
  v$g$1:(v$el$1:PID)+ v$g$2:(v$el$1:Constant)+ @Two 
  /* value = GNode(Two, [v$g$1, v$g$2]); */
  ;

transient Node Three = 
  v$g$1:PID v$g$2:Constant /* value = GNode(Three, [v$g$1, v$g$2]); */
  ;

Node PID = 
  v$g$1:Identifier /* value = GNode(PID, [v$g$1]); */
  ;

Node Constant = 
  v$g$1:Number /* value = GNode(Constant, [v$g$1]); */
  ;

transient Node Identifier = 
  void:v$pt$2:WordCharacters void:v$pt$1:Spacing 
  yyValue:Formatting([], v$pt$2, [v$pt$1])
  ;

transient Token WordCharacters = 
  ([a-z])+ /* value = Token(<text>); */
  ;

transient Node Number = 
  void:v$pt$2:NumberCharacters void:v$pt$1:Spacing 
  yyValue:Formatting([], v$pt$2, [v$pt$1])
  ;

transient Token NumberCharacters = 
  (( /* Switch */
    [0-9] 
  ))+ /* value = Token(<text>); */
  ;

Node Symbol = 
  void:v$pt$2:SymbolCharacters void:v$pt$1:Spacing 
  yyValue:Formatting([], v$pt$2, [v$pt$1])
  ;

transient Token SymbolCharacters = 
  ( /* Switch */
    [(] /* value = Token("("); */
    / [)] /* value = Token(")"); */
    / [,] /* value = Token(","); */
  )
  ;

transient Token Spacing = 
  (( /* Switch */
    [\t\f ] 
  ))* /* value = Token(<text>); */
  ;

// ===========================================================================

