apeg binary;


prog:

 number<r> (verify<r, b> {? b==true} convert<r, st>{ s = st + s;})* {s = '1' + s;}

;

verify [int r] returns b:
	{b = true;}{aux = r /2;} {? aux == 1}{b = false;}
;

convert [int r] returns st:
	
	{x = r % 2;} {r = r/2;}
	{? x==0}{ st = '0'; }
	/ {? x==1 }{ st = '1'; }

;


number returns r  :
    digit<r> ( digit<aux> { r = r * 10 + aux; } )*
;

digit returns x1 :

  '0'  { x1 = 0; }
  / '1'  { x1 = 1; }
  / '2'  { x1 = 2; }
  / '3'  { x1 = 3; }
  / '4'  { x1 = 4; }
  / '5'  { x1 = 5; }
  / '6'  { x1 = 6; }
  / '7'  { x1 = 7; }
  / '8'  { x1 = 8; }
  / '9'  { x1 = 9; }
 ;