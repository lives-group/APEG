/**
 *  APEG Tool Parser 
 *  This code was automatically generated by APEG Parser Generator.
 *  Last modification 27/04/2018
 */
public class Adapdatadependent extends StateFullBaseParser{

      public Adapdatadependent(String fname) {
          super(fname);
          startRule("root");
      }

      public PegResult literal3(){
         startRule("literal3");
         literal();
         if(isOk()){
             literal();
             if(isOk()){
                 literal();
                 if(isOk()){
                     mkBacktracPoint();
                     matchNext();
                     if(isOk()){ return endSuccess();}
                     if(isOk()){ restore(); fail();} 
                     else{
                         dismissBacktracPoint();  
                         done(); 
                     } 
                 } 
             } 
         } 
         if(isOk()){return success();} else{return fail();}      
      }

      public PegResult literal(){
         startRule("literal");
         number();
         if(isOk()){
             match("[");
             if(isOk()){
                 match("[");
                 if(isOk()){
                     strN();
                     if(isOk()){
                         match("]"); 
                     } 
                 } 
             } 
         } 
         if(isOk()){return success();} else{return fail();}      
      }

      public PegResult strN(){
         startRule("strN");
         number();
         if(isOk()){
             match("[");
             if(isOk()){
                 match("[");
                 if(isOk()){
                     strN();
                     if(isOk()){
                         match("]"); 
                     } 
                 } 
             } 
         } 
         if(isOk()){return success();} else{return fail();}      
      }

      public PegResult CHAR(){
         startRule("CHAR");
         matchNext();
         if(isOk()){ return endSuccess();}
         if(isOk()){return success();} else{return fail();}      
      }

      public PegResult number(){
         startRule("number");
         digit();
         if(isOk()){
             do{
                mkBacktracPoint();
                digit();
                if(isOk()){
                    matchNext();
                    if(isOk()){ return endSuccess();} 
                } 
                if(!isOk()){restore();} else{dismissBacktracPoint();}
             }while(isOk());
             done(); 
         } 
         if(isOk()){return success();} else{return fail();}      
      }

      public PegResult digit(){
         startRule("digit");
         mkBacktracPoint();
         match("0");
         if(isOk()){
             digit();
             if(isOk()){
                 do{
                    mkBacktracPoint();
                    digit();
                    if(isOk()){
                        matchNext();
                        if(isOk()){ return endSuccess();} 
                    } 
                    if(!isOk()){restore();} else{dismissBacktracPoint();}
                 }while(isOk());
                 done(); 
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("1");
         if(isOk()){
             match("0");
             if(isOk()){
                 digit();
                 if(isOk()){
                     do{
                        mkBacktracPoint();
                        digit();
                        if(isOk()){
                            matchNext();
                            if(isOk()){ return endSuccess();} 
                        } 
                        if(!isOk()){restore();} else{dismissBacktracPoint();}
                     }while(isOk());
                     done(); 
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("2");
         if(isOk()){
             match("1");
             if(isOk()){
                 match("0");
                 if(isOk()){
                     digit();
                     if(isOk()){
                         do{
                            mkBacktracPoint();
                            digit();
                            if(isOk()){
                                matchNext();
                                if(isOk()){ return endSuccess();} 
                            } 
                            if(!isOk()){restore();} else{dismissBacktracPoint();}
                         }while(isOk());
                         done(); 
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("3");
         if(isOk()){
             match("2");
             if(isOk()){
                 match("1");
                 if(isOk()){
                     match("0");
                     if(isOk()){
                         digit();
                         if(isOk()){
                             do{
                                mkBacktracPoint();
                                digit();
                                if(isOk()){
                                    matchNext();
                                    if(isOk()){ return endSuccess();} 
                                } 
                                if(!isOk()){restore();} else{dismissBacktracPoint();}
                             }while(isOk());
                             done(); 
                         }  
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("4");
         if(isOk()){
             match("3");
             if(isOk()){
                 match("2");
                 if(isOk()){
                     match("1");
                     if(isOk()){
                         match("0");
                         if(isOk()){
                             digit();
                             if(isOk()){
                                 do{
                                    mkBacktracPoint();
                                    digit();
                                    if(isOk()){
                                        matchNext();
                                        if(isOk()){ return endSuccess();} 
                                    } 
                                    if(!isOk()){restore();} else{dismissBacktracPoint();}
                                 }while(isOk());
                                 done(); 
                             }  
                         }  
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("5");
         if(isOk()){
             match("4");
             if(isOk()){
                 match("3");
                 if(isOk()){
                     match("2");
                     if(isOk()){
                         match("1");
                         if(isOk()){
                             match("0");
                             if(isOk()){
                                 digit();
                                 if(isOk()){
                                     do{
                                        mkBacktracPoint();
                                        digit();
                                        if(isOk()){
                                            matchNext();
                                            if(isOk()){ return endSuccess();} 
                                        } 
                                        if(!isOk()){restore();} else{dismissBacktracPoint();}
                                     }while(isOk());
                                     done(); 
                                 }  
                             }  
                         }  
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("6");
         if(isOk()){
             match("5");
             if(isOk()){
                 match("4");
                 if(isOk()){
                     match("3");
                     if(isOk()){
                         match("2");
                         if(isOk()){
                             match("1");
                             if(isOk()){
                                 match("0");
                                 if(isOk()){
                                     digit();
                                     if(isOk()){
                                         do{
                                            mkBacktracPoint();
                                            digit();
                                            if(isOk()){
                                                matchNext();
                                                if(isOk()){ return endSuccess();} 
                                            } 
                                            if(!isOk()){restore();} else{dismissBacktracPoint();}
                                         }while(isOk());
                                         done(); 
                                     }  
                                 }  
                             }  
                         }  
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("7");
         if(isOk()){
             match("6");
             if(isOk()){
                 match("5");
                 if(isOk()){
                     match("4");
                     if(isOk()){
                         match("3");
                         if(isOk()){
                             match("2");
                             if(isOk()){
                                 match("1");
                                 if(isOk()){
                                     match("0");
                                     if(isOk()){
                                         digit();
                                         if(isOk()){
                                             do{
                                                mkBacktracPoint();
                                                digit();
                                                if(isOk()){
                                                    matchNext();
                                                    if(isOk()){ return endSuccess();} 
                                                } 
                                                if(!isOk()){restore();} else{dismissBacktracPoint();}
                                             }while(isOk());
                                             done(); 
                                         }  
                                     }  
                                 }  
                             }  
                         }  
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         mkBacktracPoint();
         match("8");
         if(isOk()){
             match("7");
             if(isOk()){
                 match("6");
                 if(isOk()){
                     match("5");
                     if(isOk()){
                         match("4");
                         if(isOk()){
                             match("3");
                             if(isOk()){
                                 match("2");
                                 if(isOk()){
                                     match("1");
                                     if(isOk()){
                                         match("0");
                                         if(isOk()){
                                             digit();
                                             if(isOk()){
                                                 do{
                                                    mkBacktracPoint();
                                                    digit();
                                                    if(isOk()){
                                                        matchNext();
                                                        if(isOk()){ return endSuccess();} 
                                                    } 
                                                    if(!isOk()){restore();} else{dismissBacktracPoint();}
                                                 }while(isOk());
                                                 done(); 
                                             }  
                                         }  
                                     }  
                                 }  
                             }  
                         }  
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         restore();    
         mkBacktracPoint();
         match("9");
         if(isOk()){
             match("8");
             if(isOk()){
                 match("7");
                 if(isOk()){
                     match("6");
                     if(isOk()){
                         match("5");
                         if(isOk()){
                             match("4");
                             if(isOk()){
                                 match("3");
                                 if(isOk()){
                                     match("2");
                                     if(isOk()){
                                         match("1");
                                         if(isOk()){
                                             match("0");
                                             if(isOk()){
                                                 digit();
                                                 if(isOk()){
                                                     do{
                                                        mkBacktracPoint();
                                                        digit();
                                                        if(isOk()){
                                                            matchNext();
                                                            if(isOk()){ return endSuccess();} 
                                                        } 
                                                        if(!isOk()){restore();} else{dismissBacktracPoint();}
                                                     }while(isOk());
                                                     done(); 
                                                 }  
                                             }  
                                         }  
                                     }  
                                 }  
                             }  
                         }  
                     }  
                 }  
             }  
         } 
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){ return success();}
         if(isOk()){return success();} else{return fail();}      
      } 
}